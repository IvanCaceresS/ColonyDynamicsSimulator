{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.5 micras de radio y 2 micras de largo, de color azul marino, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una SCerevisiae con forma de cocco de 5 micras de diámetro, de color verde esmeralda, se duplica cada 95 minutos y el hijo se separa del padre cuando alcanza el 35% del crecimiento. Una Spirochaeta con forma de helicoide de 15 micras de longitud, de color morado oscuro, se duplica cada 50 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.5f,1,0.5f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 0.502f, 1f)); CPAM_Primitive(\"SCerevisiae\",PrimitiveType.Sphere,new Vector3(5f,5f,5f),new Vector3(90,0,0),0,new Color(0.314f, 0.784f, 0.471f, 1f)); float length=15f; CPAM_Helical(\"Spirochaeta\",length,new Vector3(90,0,0), new Color(0.251f, 0.0f, 0.251f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.5f, Length=2f, TimeReference=1500.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);SCerevisiae -> Cocco (TimeReference=5700.0f, SeparationThreshold=0.35f, MaxScale=5f, GrowthTime=0f, GrowthDuration=5700.0f * 0.35f, TimeSinceLastDivision=0f, DivisionInterval=5700.0f * 0.35f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);Spirochaeta -> Helicoide (MaxAxialLength=15f, CurrentAxialLength=5.0f, GrowthTime=0f, GrowthDuration=3000.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=3000.0f * 0.8f, TimeReference=3000.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.4 micras de radio y 1.8 micras de largo, de color azul, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una SCerevisiae con forma de cocco de 4.5 micras de diámetro, de color rojo normal, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.4f,1.8f,0.4f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f)); CPAM_Primitive(\"SCerevisiae\",PrimitiveType.Sphere,new Vector3(4.5f,4.5f,4.5f),new Vector3(90,0,0),0,new Color(1.0f, 0.0f, 0.0f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.4f, Length=1.8f, TimeReference=1200.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);SCerevisiae -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.65f, MaxScale=4.5f, GrowthTime=0f, GrowthDuration=5400.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.65f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.6 micras de radio y 2.2 micras de largo, de color azul claro, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una SCerevisiae con forma de cocco de 4 micras de diámetro, de color verde claro, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento. Una Spirochaeta con forma de helicoide de 18 micras de longitud, de color morado claro y se duplica cada 45 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.6f,2.2f,0.6f),new Vector3(90,0,0),1,new Color(0.678f, 0.847f, 0.902f, 1f)); CPAM_Primitive(\"SCerevisiae\",PrimitiveType.Sphere,new Vector3(4f,4f,4f),new Vector3(90,0,0),0,new Color(0.565f, 0.933f, 0.565f, 1f)); CPAM_Helical(\"Spirochaeta\",18f,new Vector3(90,0,0), new Color(0.867f, 0.627f, 0.867f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.6f, Length=2.2f, TimeReference=1500.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);SCerevisiae -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.65f, MaxScale=4f, GrowthTime=0f, GrowthDuration=5400.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.65f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);Spirochaeta -> Helicoide (MaxAxialLength=18f, CurrentAxialLength=6.0f, GrowthTime=0f, GrowthDuration=2700.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2700.0f * 0.8f, TimeReference=2700.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Estrella con forma de helicoide de 20 micras de longitud, de color amarillo y se duplica cada 50 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Helical(\"Estrella\",20f,new Vector3(90,0,0), new Color(1.0f, 1.0f, 0.0f, 1f));}2.OrganismTypes{[Estrella -> Helicoide (MaxAxialLength=20f, CurrentAxialLength=6.67f, GrowthTime=0f, GrowthDuration=3000.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=3000.0f * 0.8f, TimeReference=3000.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.7 micras de radio y 3 micras de largo, de color azul, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una EColi_2 con forma de bacilo de 0.9 micras de radio y 4 micras de largo, de color rojo, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.7f,3f,0.7f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.9f,4f,0.9f),new Vector3(90,0,0),1,new Color(1.0f, 0.0f, 0.0f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.7f, Length=3f, TimeReference=1200.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.9f, Length=4f, TimeReference=1800.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Levadura con forma de cocco de 4.2 micras de diámetro, de color blanco crema, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Levadura\",PrimitiveType.Sphere,new Vector3(4.2f,4.2f,4.2f),new Vector3(90,0,0),0,new Color(0.98f, 0.973f, 0.902f, 1f));}2.OrganismTypes{[Levadura -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.60f, MaxScale=4.2f, GrowthTime=0f, GrowthDuration=5400.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.60f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Bacteria con forma de bacilo de 1.2 micras de radio y 6 micras de largo, de color gris, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Bacteria\",PrimitiveType.Capsule,new Vector3(1.2f,6f,1.2f),new Vector3(90,0,0),1,new Color(0.5f, 0.5f, 0.5f, 1f));}2.OrganismTypes{[Bacteria -> Bacilo (Radius=1.2f, Length=6f, TimeReference=1800.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Streptococcus con forma de cocco de 1.5 micras de diámetro, de color rosado, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Streptococcus\",PrimitiveType.Sphere,new Vector3(1.5f,1.5f,1.5f),new Vector3(90,0,0),0,new Color(1.0f, 0.753f, 0.796f, 1f));}2.OrganismTypes{[Streptococcus -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.65f, MaxScale=1.5f, GrowthTime=0f, GrowthDuration=5400.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.65f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Spirochaeta con forma de helicoide de 22 micras de longitud, de color morado y se duplica cada 45 minutos. Una Pseudomonas con forma de bacilo de 1 micra de radio y 5 micras de largo, de color verde, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento. Una SCerevisiae con forma de cocco de 3.5 micras de diámetro, de color amarillo, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Helical(\"Spirochaeta\",22f,new Vector3(90,0,0), new Color(0.502f, 0.0f, 0.502f, 1f)); CPAM_Primitive(\"Pseudomonas\",PrimitiveType.Capsule,new Vector3(1f,5f,1f),new Vector3(90,0,0),1,new Color(0.0f, 0.502f, 0.0f, 1f)); CPAM_Primitive(\"SCerevisiae\",PrimitiveType.Sphere,new Vector3(3.5f,3.5f,3.5f),new Vector3(90,0,0),0,new Color(1.0f, 1.0f, 0.0f, 1f));}2.OrganismTypes{[Spirochaeta -> Helicoide (MaxAxialLength=22f, CurrentAxialLength=7.33f, GrowthTime=0f, GrowthDuration=2700.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2700.0f * 0.8f, TimeReference=2700.0f, IsInitialCell=true, TimeReferenceInitialized=false);Pseudomonas -> Bacilo (Radius=1f, Length=5f, TimeReference=1800.0f, SeparationThreshold=0.60f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.60f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);SCerevisiae -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.65f, MaxScale=3.5f, GrowthTime=0f, GrowthDuration=5400.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.65f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.3 micras de radio y 1.5 micras de largo, de color azul, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una SCerevisiae_1 con forma de cocco de 3 micras de diámetro, de color verde, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento. Una Spirochaeta_1 con forma de helicoide de 25 micras de longitud, de color morado y se duplica cada 40 minutos. Una Pseudomonas_1 con forma de bacilo de 1.1 micras de radio y 4.5 micras de largo, de color amarillo, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.3f,1.5f,0.3f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f)); CPAM_Primitive(\"SCerevisiae_1\",PrimitiveType.Sphere,new Vector3(3f,3f,3f),new Vector3(90,0,0),0,new Color(0.0f, 0.502f, 0.0f, 1f)); CPAM_Helical(\"Spirochaeta_1\",25f,new Vector3(90,0,0), new Color(0.502f, 0.0f, 0.502f, 1f)); CPAM_Primitive(\"Pseudomonas_1\",PrimitiveType.Capsule,new Vector3(1.1f,4.5f,1.1f),new Vector3(90,0,0),1,new Color(1.0f, 1.0f, 0.0f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.3f, Length=1.5f, TimeReference=1200.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);SCerevisiae_1 -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.60f, MaxScale=3f, GrowthTime=0f, GrowthDuration=5400.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.60f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);Spirochaeta_1 -> Helicoide (MaxAxialLength=25f, CurrentAxialLength=8.33f, GrowthTime=0f, GrowthDuration=2400.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2400.0f * 0.8f, TimeReference=2400.0f, IsInitialCell=true, TimeReferenceInitialized=false);Pseudomonas_1 -> Bacilo (Radius=1.1f, Length=4.5f, TimeReference=1500.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Cocco con forma de cocco de 2.5 micras de diámetro, de color naranja, se duplica cada 80 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Cocco\",PrimitiveType.Sphere,new Vector3(2.5f,2.5f,2.5f),new Vector3(90,0,0),0,new Color(1.0f, 0.647f, 0.0f, 1f));}2.OrganismTypes{[Cocco -> Cocco (TimeReference=4800.0f, SeparationThreshold=0.70f, MaxScale=2.5f, GrowthTime=0f, GrowthDuration=4800.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=4800.0f * 0.70f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Pseudomonas con forma de bacilo de 0.8 micras de radio y 3.8 micras de largo, de color verde lima, se duplica cada 28 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento. Una Spirochaeta con forma de helicoide de 28 micras de longitud, de color púrpura y se duplica cada 48 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Pseudomonas\",PrimitiveType.Capsule,new Vector3(0.8f,3.8f,0.8f),new Vector3(90,0,0),1,new Color(0.196f, 0.804f, 0.196f, 1f)); CPAM_Helical(\"Spirochaeta\",28f,new Vector3(90,0,0), new Color(0.627f, 0.125f, 0.941f, 1f));}2.OrganismTypes{[Pseudomonas -> Bacilo (Radius=0.8f, Length=3.8f, TimeReference=1680.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1680.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=1680.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);Spirochaeta -> Helicoide (MaxAxialLength=28f, CurrentAxialLength=9.33f, GrowthTime=0f, GrowthDuration=2880.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2880.0f * 0.8f, TimeReference=2880.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Streptococcus con forma de cocco de 1 micra de diámetro, de color rojo sangre, se duplica cada 33 minutos y el hijo se separa del padre cuando alcanza el 58% del crecimiento. Un BacteriumX con forma de bacilo de 1.5 micras de radio y 8 micras de largo, de color amarillo dorado, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 80% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Streptococcus\",PrimitiveType.Sphere,new Vector3(1f,1f,1f),new Vector3(90,0,0),0,new Color(0.545f, 0.0f, 0.0f, 1f)); CPAM_Primitive(\"BacteriumX\",PrimitiveType.Capsule,new Vector3(1.5f,8f,1.5f),new Vector3(90,0,0),1,new Color(1.0f, 0.843f, 0.0f, 1f));}2.OrganismTypes{[Streptococcus -> Cocco (TimeReference=1980.0f, SeparationThreshold=0.58f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1980.0f * 0.58f, TimeSinceLastDivision=0f, DivisionInterval=1980.0f * 0.58f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);BacteriumX -> Bacilo (Radius=1.5f, Length=8f, TimeReference=1500.0f, SeparationThreshold=0.80f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.80f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.80f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una SCerevisiae_A con forma de cocco de 4.9 micras de diámetro, de color blanco, se duplica cada 85 minutos y el hijo se separa del padre cuando alcanza el 50% del crecimiento. Una SCerevisiae_B con forma de cocco de 4.7 micras de diámetro, de color beige, se duplica cada 95 minutos y el hijo se separa del padre cuando alcanza el 55% del crecimiento. Una SCerevisiae_C con forma de cocco de 4.6 micras de diámetro, de color crema, se duplica cada 105 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"SCerevisiae_A\",PrimitiveType.Sphere,new Vector3(4.9f,4.9f,4.9f),new Vector3(90,0,0),0,new Color(1.0f, 1.0f, 1.0f, 1f)); CPAM_Primitive(\"SCerevisiae_B\",PrimitiveType.Sphere,new Vector3(4.7f,4.7f,4.7f),new Vector3(90,0,0),0,new Color(0.961f, 0.961f, 0.863f, 1f)); CPAM_Primitive(\"SCerevisiae_C\",PrimitiveType.Sphere,new Vector3(4.6f,4.6f,4.6f),new Vector3(90,0,0),0,new Color(0.98f, 0.973f, 0.902f, 1f));}2.OrganismTypes{[SCerevisiae_A -> Cocco (TimeReference=5100.0f, SeparationThreshold=0.50f, MaxScale=4.9f, GrowthTime=0f, GrowthDuration=5100.0f * 0.50f, TimeSinceLastDivision=0f, DivisionInterval=5100.0f * 0.50f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);SCerevisiae_B -> Cocco (TimeReference=5700.0f, SeparationThreshold=0.55f, MaxScale=4.7f, GrowthTime=0f, GrowthDuration=5700.0f * 0.55f, TimeSinceLastDivision=0f, DivisionInterval=5700.0f * 0.55f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);SCerevisiae_C -> Cocco (TimeReference=6300.0f, SeparationThreshold=0.60f, MaxScale=4.6f, GrowthTime=0f, GrowthDuration=6300.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=6300.0f * 0.60f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Vortex con forma de helicoide de 29 micras de longitud, de color negro azabache y se duplica cada 60 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Helical(\"Vortex\",29f,new Vector3(90,0,0), new Color(0.0f, 0.0f, 0.0f, 1f));}2.OrganismTypes{[Vortex -> Helicoide (MaxAxialLength=29f, CurrentAxialLength=9.67f, GrowthTime=0f, GrowthDuration=3600.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=3600.0f * 0.8f, TimeReference=3600.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.2 micras de radio y 1 micra de largo, de color cian, se duplica cada 18 minutos y el hijo se separa del padre cuando alcanza el 95% del crecimiento. Una EColi_2 con forma de bacilo de 0.35 micras de radio y 1.2 micras de largo, de color magenta, se duplica cada 22 minutos y el hijo se separa del padre cuando alcanza el 90% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.2f,1f,0.2f),new Vector3(90,0,0),1,new Color(0.0f, 1.0f, 1.0f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.35f,1.2f,0.35f),new Vector3(90,0,0),1,new Color(1.0f, 0.0f, 1.0f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.2f, Length=1f, TimeReference=1080.0f, SeparationThreshold=0.95f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1080.0f * 0.95f, TimeSinceLastDivision=0f, DivisionInterval=1080.0f * 0.95f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.35f, Length=1.2f, TimeReference=1320.0f, SeparationThreshold=0.90f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1320.0f * 0.90f, TimeSinceLastDivision=0f, DivisionInterval=1320.0f * 0.90f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una SCerevisiae con forma de cocco de 2 micras de diámetro, de color rosado pálido, se duplica cada 110 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Un Bacilo con forma de bacilo de 1.3 micras de radio y 7 micras de largo, de color gris, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una Spirochaeta con forma de helicoide de 16 micras de longitud, de color verde oscuro y se duplica cada 50 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"SCerevisiae\",PrimitiveType.Sphere,new Vector3(2f,2f,2f),new Vector3(90,0,0),0,new Color(0.988f, 0.855f, 0.898f, 1f)); CPAM_Primitive(\"Bacilo\",PrimitiveType.Capsule,new Vector3(1.3f,7f,1.3f),new Vector3(90,0,0),1,new Color(0.5f, 0.5f, 0.5f, 1f)); CPAM_Helical(\"Spirochaeta\",16f,new Vector3(90,0,0), new Color(0.0f, 0.392f, 0.0f, 1f));}2.OrganismTypes{[SCerevisiae -> Cocco (TimeReference=6600.0f, SeparationThreshold=0.70f, MaxScale=2f, GrowthTime=0f, GrowthDuration=6600.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=6600.0f * 0.70f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);Bacilo -> Bacilo (Radius=1.3f, Length=7f, TimeReference=1800.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);Spirochaeta -> Helicoide (MaxAxialLength=16f, CurrentAxialLength=5.33f, GrowthTime=0f, GrowthDuration=3000.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=3000.0f * 0.8f, TimeReference=3000.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Rod con forma de bacilo de 1.8 micras de radio y 9 micras de largo, de color marrón chocolate, se duplica cada 40 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Rod\",PrimitiveType.Capsule,new Vector3(1.8f,9f,1.8f),new Vector3(90,0,0),1,new Color(0.482f, 0.247f, 0.0f, 1f));}2.OrganismTypes{[Rod -> Bacilo (Radius=1.8f, Length=9f, TimeReference=2400.0f, SeparationThreshold=0.60f, MaxScale=1f, GrowthTime=0f, GrowthDuration=2400.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=2400.0f * 0.60f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Cocco con forma de cocco de 0.8 micras de diámetro, de color lavanda, se duplica cada 70 minutos y el hijo se separa del padre cuando alcanza el 52% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Cocco\",PrimitiveType.Sphere,new Vector3(0.8f,0.8f,0.8f),new Vector3(90,0,0),0,new Color(0.902f, 0.902f, 0.98f, 1f));}2.OrganismTypes{[Cocco -> Cocco (TimeReference=4200.0f, SeparationThreshold=0.52f, MaxScale=0.8f, GrowthTime=0f, GrowthDuration=4200.0f * 0.52f, TimeSinceLastDivision=0f, DivisionInterval=4200.0f * 0.52f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.75 micras de radio y 3.5 micras de largo, de color índigo, se duplica cada 24 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una Pseudomonas con forma de bacilo de 0.85 micras de radio y 4.2 micras de largo, de color turquesa, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 68% del crecimiento. Un Streptococcus con forma de cocco de 0.9 micras de diámetro, de color salmón, se duplica cada 35 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.75f,3.5f,0.75f),new Vector3(90,0,0),1,new Color(0.294f, 0.0f, 0.51f, 1f)); CPAM_Primitive(\"Pseudomonas\",PrimitiveType.Capsule,new Vector3(0.85f,4.2f,0.85f),new Vector3(90,0,0),1,new Color(0.251f, 0.878f, 0.816f, 1f)); CPAM_Primitive(\"Streptococcus\",PrimitiveType.Sphere,new Vector3(0.9f,0.9f,0.9f),new Vector3(90,0,0),0,new Color(0.98f, 0.502f, 0.447f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.75f, Length=3.5f, TimeReference=1440.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1440.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1440.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);Pseudomonas -> Bacilo (Radius=0.85f, Length=4.2f, TimeReference=1800.0f, SeparationThreshold=0.68f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.68f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.68f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);Streptococcus -> Cocco (TimeReference=2100.0f, SeparationThreshold=0.65f, MaxScale=0.9f, GrowthTime=0f, GrowthDuration=2100.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=2100.0f * 0.65f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Serpentina con forma de helicoide de 26 micras de longitud, de color plata y se duplica cada 75 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Helical(\"Serpentina\",26f,new Vector3(90,0,0), new Color(0.753f, 0.753f, 0.753f, 1f));}2.OrganismTypes{[Serpentina -> Helicoide (MaxAxialLength=26f, CurrentAxialLength=8.67f, GrowthTime=0f, GrowthDuration=4500.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=4500.0f * 0.8f, TimeReference=4500.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una SCerevisiae_1 con forma de cocco de 3.2 micras de diámetro, de color amarillo limón, se duplica cada 120 minutos y el hijo se separa del padre cuando alcanza el 50% del crecimiento. Una SCerevisiae_2 con forma de cocco de 3.3 micras de diámetro, de color amarillo dorado, se duplica cada 120 minutos y el hijo se separa del padre cuando alcanza el 50% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"SCerevisiae_1\",PrimitiveType.Sphere,new Vector3(3.2f,3.2f,3.2f),new Vector3(90,0,0),0,new Color(0.98f, 0.98f, 0.4f, 1f)); CPAM_Primitive(\"SCerevisiae_2\",PrimitiveType.Sphere,new Vector3(3.3f,3.3f,3.3f),new Vector3(90,0,0),0,new Color(1.0f, 0.843f, 0.0f, 1f));}2.OrganismTypes{[SCerevisiae_1 -> Cocco (TimeReference=7200.0f, SeparationThreshold=0.50f, MaxScale=3.2f, GrowthTime=0f, GrowthDuration=7200.0f * 0.50f, TimeSinceLastDivision=0f, DivisionInterval=7200.0f * 0.50f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);SCerevisiae_2 -> Cocco (TimeReference=7200.0f, SeparationThreshold=0.50f, MaxScale=3.3f, GrowthTime=0f, GrowthDuration=7200.0f * 0.50f, TimeSinceLastDivision=0f, DivisionInterval=7200.0f * 0.50f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.6 micras de radio y 2.5 micras de largo, de color azul cielo, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una SCerevisiae con forma de cocco de 4.1 micras de diámetro, de color verde pastel, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento. Una Spirochaeta con forma de helicoide de 21 micras de longitud, de color violeta claro y se duplica cada 45 minutos. Una Pseudomonas con forma de bacilo de 0.95 micras de radio y 5.5 micras de largo, de color verde agua, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.6f,2.5f,0.6f),new Vector3(90,0,0),1,new Color(0.529f, 0.808f, 0.922f, 1f)); CPAM_Primitive(\"SCerevisiae\",PrimitiveType.Sphere,new Vector3(4.1f,4.1f,4.1f),new Vector3(90,0,0),0,new Color(0.604f, 0.804f, 0.596f, 1f)); CPAM_Helical(\"Spirochaeta\",21f,new Vector3(90,0,0), new Color(0.933f, 0.824f, 0.933f, 1f)); CPAM_Primitive(\"Pseudomonas\",PrimitiveType.Capsule,new Vector3(0.95f,5.5f,0.95f),new Vector3(90,0,0),1,new Color(0.678f, 1.0f, 0.784f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.6f, Length=2.5f, TimeReference=1500.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);SCerevisiae -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.65f, MaxScale=4.1f, GrowthTime=0f, GrowthDuration=5400.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.65f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);Spirochaeta -> Helicoide (MaxAxialLength=21f, CurrentAxialLength=7.0f, GrowthTime=0f, GrowthDuration=2700.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2700.0f * 0.8f, TimeReference=2700.0f, IsInitialCell=true, TimeReferenceInitialized=false);Pseudomonas -> Bacilo (Radius=0.95f, Length=5.5f, TimeReference=1800.0f, SeparationThreshold=0.60f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.60f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Strepto_X con forma de cocco de 1.1 micras de diámetro, de color rojo vino, se duplica cada 29 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Un Strepto_Y con forma de cocco de 1.2 micras de diámetro, de color naranja quemado, se duplica cada 31 minutos y el hijo se separa del padre cuando alcanza el 72% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Strepto_X\",PrimitiveType.Sphere,new Vector3(1.1f,1.1f,1.1f),new Vector3(90,0,0),0,new Color(0.439f, 0.0f, 0.0f, 1f)); CPAM_Primitive(\"Strepto_Y\",PrimitiveType.Sphere,new Vector3(1.2f,1.2f,1.2f),new Vector3(90,0,0),0,new Color(0.8f, 0.333f, 0.0f, 1f));}2.OrganismTypes{[Strepto_X -> Cocco (TimeReference=1740.0f, SeparationThreshold=0.70f, MaxScale=1.1f, GrowthTime=0f, GrowthDuration=1740.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1740.0f * 0.70f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);Strepto_Y -> Cocco (TimeReference=1860.0f, SeparationThreshold=0.72f, MaxScale=1.2f, GrowthTime=0f, GrowthDuration=1860.0f * 0.72f, TimeSinceLastDivision=0f, DivisionInterval=1860.0f * 0.72f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Twister con forma de helicoide de 14 micras de longitud, de color verde esmeralda y se duplica cada 42 minutos. Un Globulus con forma de cocco de 2.8 micras de diámetro, de color azul zafiro, se duplica cada 99 minutos y el hijo se separa del padre cuando alcanza el 55% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Helical(\"Twister\",14f,new Vector3(90,0,0), new Color(0.314f, 0.784f, 0.471f, 1f)); CPAM_Primitive(\"Globulus\",PrimitiveType.Sphere,new Vector3(2.8f,2.8f,2.8f),new Vector3(90,0,0),0,new Color(0.059f, 0.322f, 0.729f, 1f));}2.OrganismTypes{[Twister -> Helicoide (MaxAxialLength=14f, CurrentAxialLength=4.67f, GrowthTime=0f, GrowthDuration=2520.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2520.0f * 0.8f, TimeReference=2520.0f, IsInitialCell=true, TimeReferenceInitialized=false);Globulus -> Cocco (TimeReference=5940.0f, SeparationThreshold=0.55f, MaxScale=2.8f, GrowthTime=0f, GrowthDuration=5940.0f * 0.55f, TimeSinceLastDivision=0f, DivisionInterval=5940.0f * 0.55f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Bacilo con forma de bacilo de 1.4 micras de radio y 7.5 micras de largo, de color negro, se duplica cada 33 minutos y el hijo se separa del padre cuando alcanza el 77% del crecimiento. Un Cocco con forma de cocco de 2.2 micras de diámetro, de color blanco, se duplica cada 88 minutos y el hijo se separa del padre cuando alcanza el 66% del crecimiento. Un Helicoide con forma de helicoide de 23 micras de longitud, de color gris y se duplica cada 44 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Bacilo\",PrimitiveType.Capsule,new Vector3(1.4f,7.5f,1.4f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 0.0f, 1f)); CPAM_Primitive(\"Cocco\",PrimitiveType.Sphere,new Vector3(2.2f,2.2f,2.2f),new Vector3(90,0,0),0,new Color(1.0f, 1.0f, 1.0f, 1f)); CPAM_Helical(\"Helicoide\",23f,new Vector3(90,0,0), new Color(0.5f, 0.5f, 0.5f, 1f));}2.OrganismTypes{[Bacilo -> Bacilo (Radius=1.4f, Length=7.5f, TimeReference=1980.0f, SeparationThreshold=0.77f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1980.0f * 0.77f, TimeSinceLastDivision=0f, DivisionInterval=1980.0f * 0.77f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);Cocco -> Cocco (TimeReference=5280.0f, SeparationThreshold=0.66f, MaxScale=2.2f, GrowthTime=0f, GrowthDuration=5280.0f * 0.66f, TimeSinceLastDivision=0f, DivisionInterval=5280.0f * 0.66f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero);Helicoide -> Helicoide (MaxAxialLength=23f, CurrentAxialLength=7.67f, GrowthTime=0f, GrowthDuration=2640.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2640.0f * 0.8f, TimeReference=2640.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Pseudomonas con forma de bacilo de 0.55 micras de radio y 2.8 micras de largo, de color verde bosque, se duplica cada 27 minutos y el hijo se separa del padre cuando alcanza el 59% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Pseudomonas\",PrimitiveType.Capsule,new Vector3(0.55f,2.8f,0.55f),new Vector3(90,0,0),1,new Color(0.133f, 0.545f, 0.133f, 1f));}2.OrganismTypes{[Pseudomonas -> Bacilo (Radius=0.55f, Length=2.8f, TimeReference=1620.0f, SeparationThreshold=0.59f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1620.0f * 0.59f, TimeSinceLastDivision=0f, DivisionInterval=1620.0f * 0.59f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 1 micra de radio y 4 micras de largo, de color verde, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una EColi_2 con forma de bacilo de 0.8 micras de radio y 3.5 micras de largo, de color azul claro, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 68% del crecimiento. Una EColi_3 con forma de bacilo de 1.6 micras de radio y 8.5 micras de largo, de color amarillo claro, se duplica cada 40 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento. Una EColi_4 con forma de bacilo de 1.2 micras de radio y 6.5 micras de largo, de color naranja, se duplica cada 35 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento. Una EColi_5 con forma de bacilo de 0.7 micras de radio y 3.2 micras de largo, de color naranja con rojo, se duplica cada 22 minutos y el hijo se separa del padre cuando alcanza el 72% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(1f,4f,1f),new Vector3(90,0,0),1,new Color(0.0f, 0.502f, 0.0f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.8f,3.5f,0.8f),new Vector3(90,0,0),1,new Color(0.678f, 0.847f, 0.902f, 1f)); CPAM_Primitive(\"EColi_3\",PrimitiveType.Capsule,new Vector3(1.6f,8.5f,1.6f),new Vector3(90,0,0),1,new Color(1.0f, 1.0f, 0.878f, 1f)); CPAM_Primitive(\"EColi_4\",PrimitiveType.Capsule,new Vector3(1.2f,6.5f,1.2f),new Vector3(90,0,0),1,new Color(1.0f, 0.647f, 0.0f, 1f)); CPAM_Primitive(\"EColi_5\",PrimitiveType.Capsule,new Vector3(0.7f,3.2f,0.7f),new Vector3(90,0,0),1,new Color(1.0f, 0.271f, 0.0f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=1f, Length=4f, TimeReference=1800.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.8f, Length=3.5f, TimeReference=1500.0f, SeparationThreshold=0.68f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.68f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.68f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_3 -> Bacilo (Radius=1.6f, Length=8.5f, TimeReference=2400.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=2400.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=2400.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_4 -> Bacilo (Radius=1.2f, Length=6.5f, TimeReference=2100.0f, SeparationThreshold=0.65f, MaxScale=1f, GrowthTime=0f, GrowthDuration=2100.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=2100.0f * 0.65f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_5 -> Bacilo (Radius=0.7f, Length=3.2f, TimeReference=1320.0f, SeparationThreshold=0.72f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1320.0f * 0.72f, TimeSinceLastDivision=0f, DivisionInterval=1320.0f * 0.72f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.4 micras de radio y 2.1 micras de largo, de color azul, se duplica cada 15 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.4f,2.1f,0.4f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.4f, Length=2.1f, TimeReference=900.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=900.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=900.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.3 micras de radio y 1.9 micras de largo, de color verde, se duplica cada 12 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.3f,1.9f,0.3f),new Vector3(90,0,0),1,new Color(0.0f, 0.502f, 0.0f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.3f, Length=1.9f, TimeReference=720.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=720.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=720.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.25 micras de radio y 1.4 micras de largo, de color rojo claro, se duplica cada 10 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.25f,1.4f,0.25f),new Vector3(90,0,0),1,new Color(1.0f, 0.4f, 0.4f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.25f, Length=1.4f, TimeReference=600.0f, SeparationThreshold=0.65f, MaxScale=1f, GrowthTime=0f, GrowthDuration=600.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=600.0f * 0.65f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.35 micras de radio y 2 micras de largo, de color amarillo, se duplica cada 13 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.35f,2f,0.35f),new Vector3(90,0,0),1,new Color(1.0f, 1.0f, 0.0f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.35f, Length=2f, TimeReference=780.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=780.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=780.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.28 micras de radio y 1.7 micras de largo, de color cian, se duplica cada 11 minutos y el hijo se separa del padre cuando alcanza el 72% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.28f,1.7f,0.28f),new Vector3(90,0,0),1,new Color(0.0f, 1.0f, 1.0f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.28f, Length=1.7f, TimeReference=660.0f, SeparationThreshold=0.72f, MaxScale=1f, GrowthTime=0f, GrowthDuration=660.0f * 0.72f, TimeSinceLastDivision=0f, DivisionInterval=660.0f * 0.72f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi con forma de bacilo de 0.45 micras de radio y 2.3 micras de largo, de color verde lima, se duplica cada 14 minutos y el hijo se separa del padre cuando alcanza el 80% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi\",PrimitiveType.Capsule,new Vector3(0.45f,2.3f,0.45f),new Vector3(90,0,0),1,new Color(0.196f, 0.804f, 0.196f, 1f));}2.OrganismTypes{[EColi -> Bacilo (Radius=0.45f, Length=2.3f, TimeReference=840.0f, SeparationThreshold=0.80f, MaxScale=1f, GrowthTime=0f, GrowthDuration=840.0f * 0.80f, TimeSinceLastDivision=0f, DivisionInterval=840.0f * 0.80f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Lactobacillus con forma de bacilo de 0.9 micras de radio y 5 micras de largo, de color blanco, se duplica cada 18 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Lactobacillus\",PrimitiveType.Capsule,new Vector3(0.9f,5f,0.9f),new Vector3(90,0,0),1,new Color(1.0f, 1.0f, 1.0f, 1f));}2.OrganismTypes{[Lactobacillus -> Bacilo (Radius=0.9f, Length=5f, TimeReference=1080.0f, SeparationThreshold=0.60f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1080.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=1080.0f * 0.60f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Lactobacillus con forma de bacilo de 0.8 micras de radio y 4.5 micras de largo, de color crema, se duplica cada 16 minutos y el hijo se separa del padre cuando alcanza el 55% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Lactobacillus\",PrimitiveType.Capsule,new Vector3(0.8f,4.5f,0.8f),new Vector3(90,0,0),1,new Color(0.98f, 0.973f, 0.902f, 1f));}2.OrganismTypes{[Lactobacillus -> Bacilo (Radius=0.8f, Length=4.5f, TimeReference=960.0f, SeparationThreshold=0.55f, MaxScale=1f, GrowthTime=0f, GrowthDuration=960.0f * 0.55f, TimeSinceLastDivision=0f, DivisionInterval=960.0f * 0.55f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Lactobacillus con forma de bacilo de 0.85 micras de radio y 4.8 micras de largo, de color grisáceo, se duplica cada 17 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Lactobacillus\",PrimitiveType.Capsule,new Vector3(0.85f,4.8f,0.85f),new Vector3(90,0,0),1,new Color(0.6f, 0.6f, 0.6f, 1f));}2.OrganismTypes{[Lactobacillus -> Bacilo (Radius=0.85f, Length=4.8f, TimeReference=1020.0f, SeparationThreshold=0.65f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1020.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=1020.0f * 0.65f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Cubo con forma de bacilo de 1.1 micras de radio y 5.5 micras de largo, de color rojo, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Cubo\",PrimitiveType.Capsule,new Vector3(1.1f,5.5f,1.1f),new Vector3(90,0,0),1,new Color(1.0f, 0.0f, 0.0f, 1f));}2.OrganismTypes{[Cubo -> Bacilo (Radius=1.1f, Length=5.5f, TimeReference=1800.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Cubo con forma de bacilo de 1 micra de radio y 5.2 micras de largo, de color azul, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Cubo\",PrimitiveType.Capsule,new Vector3(1f,5.2f,1f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f));}2.OrganismTypes{[Cubo -> Bacilo (Radius=1f, Length=5.2f, TimeReference=1500.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Cubo con forma de bacilo de 1.05 micras de radio y 5.3 micras de largo, de color verde, se duplica cada 28 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Cubo\",PrimitiveType.Capsule,new Vector3(1.05f,5.3f,1.05f),new Vector3(90,0,0),1,new Color(0.0f, 0.502f, 0.0f, 1f));}2.OrganismTypes{[Cubo -> Bacilo (Radius=1.05f, Length=5.3f, TimeReference=1680.0f, SeparationThreshold=0.60f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1680.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=1680.0f * 0.60f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EcoliFalsa con forma de cocco de 3.9 micras de diámetro, de color rosa, se duplica cada 80 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EcoliFalsa\",PrimitiveType.Sphere,new Vector3(3.9f,3.9f,3.9f),new Vector3(90,0,0),0,new Color(1.0f, 0.753f, 0.796f, 1f));}2.OrganismTypes{[EcoliFalsa -> Cocco (TimeReference=4800.0f, SeparationThreshold=0.60f, MaxScale=3.9f, GrowthTime=0f, GrowthDuration=4800.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=4800.0f * 0.60f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una NoEsEcoli con forma de cocco de 3.8 micras de diámetro, de color amarillo, se duplica cada 85 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"NoEsEcoli\",PrimitiveType.Sphere,new Vector3(3.8f,3.8f,3.8f),new Vector3(90,0,0),0,new Color(1.0f, 1.0f, 0.0f, 1f));}2.OrganismTypes{[NoEsEcoli -> Cocco (TimeReference=5100.0f, SeparationThreshold=0.65f, MaxScale=3.8f, GrowthTime=0f, GrowthDuration=5100.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=5100.0f * 0.65f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EcoliPeroCocco con forma de cocco de 3.7 micras de diámetro, de color naranja, se duplica cada 90 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EcoliPeroCocco\",PrimitiveType.Sphere,new Vector3(3.7f,3.7f,3.7f),new Vector3(90,0,0),0,new Color(1.0f, 0.647f, 0.0f, 1f));}2.OrganismTypes{[EcoliPeroCocco -> Cocco (TimeReference=5400.0f, SeparationThreshold=0.70f, MaxScale=3.7f, GrowthTime=0f, GrowthDuration=5400.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=5400.0f * 0.70f, Parent=Entity.Null, IsInitialCell=true, TimeReferenceInitialized=false, GrowthDirection=float3.zero)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_A con forma de bacilo de 0.6 micras de radio y 2.6 micras de largo, de color azul, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una EColi_B con forma de bacilo de 0.7 micras de radio y 2.8 micras de largo, de color verde, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento. Una EColi_C con forma de bacilo de 0.5 micras de radio y 2.4 micras de largo, de color roja, se duplica cada 18 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento. Una EColi_D con forma de bacilo de 0.9 micras de radio y 3.1 micras de largo, de color amarilla, se duplica cada 22 minutos y el hijo se separa del padre cuando alcanza el 80% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_A\",PrimitiveType.Capsule,new Vector3(0.6f,2.6f,0.6f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f)); CPAM_Primitive(\"EColi_B\",PrimitiveType.Capsule,new Vector3(0.7f,2.8f,0.7f),new Vector3(90,0,0),1,new Color(0.0f, 0.502f, 0.0f, 1f)); CPAM_Primitive(\"EColi_C\",PrimitiveType.Capsule,new Vector3(0.5f,2.4f,0.5f),new Vector3(90,0,0),1,new Color(1.0f, 0.0f, 0.0f, 1f)); CPAM_Primitive(\"EColi_D\",PrimitiveType.Capsule,new Vector3(0.9f,3.1f,0.9f),new Vector3(90,0,0),1,new Color(1.0f, 1.0f, 0.0f, 1f));}2.OrganismTypes{[EColi_A -> Bacilo (Radius=0.6f, Length=2.6f, TimeReference=1200.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_B -> Bacilo (Radius=0.7f, Length=2.8f, TimeReference=1500.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_C -> Bacilo (Radius=0.5f, Length=2.4f, TimeReference=1080.0f, SeparationThreshold=0.65f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1080.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=1080.0f * 0.65f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_D -> Bacilo (Radius=0.9f, Length=3.1f, TimeReference=1320.0f, SeparationThreshold=0.80f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1320.0f * 0.80f, TimeSinceLastDivision=0f, DivisionInterval=1320.0f * 0.80f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.4 micras de radio y 2 micras de largo, de color azul claro, se duplica cada 15 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una EColi_2 con forma de bacilo de 0.8 micras de radio y 4 micras de largo, de color verde claro, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 90% del crecimiento. Una EColi_3 con forma de bacilo de 0.6 micras de radio y 3 micras de largo, de color morado, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una EColi_4 con forma de bacilo de 0.5 micras de radio y 2.5 micras de largo, de color rojo claro, se duplica cada 25 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.4f,2f,0.4f),new Vector3(90,0,0),1,new Color(0.678f, 0.847f, 0.902f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.8f,4f,0.8f),new Vector3(90,0,0),1,new Color(0.565f, 0.933f, 0.565f, 1f)); CPAM_Primitive(\"EColi_3\",PrimitiveType.Capsule,new Vector3(0.6f,3f,0.6f),new Vector3(90,0,0),1,new Color(0.502f, 0.0f, 0.502f, 1f)); CPAM_Primitive(\"EColi_4\",PrimitiveType.Capsule,new Vector3(0.5f,2.5f,0.5f),new Vector3(90,0,0),1,new Color(1.0f, 0.4f, 0.4f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.4f, Length=2f, TimeReference=900.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=900.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=900.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.8f, Length=4f, TimeReference=1500.0f, SeparationThreshold=0.90f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.90f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.90f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_3 -> Bacilo (Radius=0.6f, Length=3f, TimeReference=1500.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_4 -> Bacilo (Radius=0.5f, Length=2.5f, TimeReference=1500.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1500.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1500.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.2 micras de radio y 1.5 micras de largo, de color azul, se duplica cada 10 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una EColi_2 con forma de bacilo de 0.7 micras de radio y 3.5 micras de largo, de color verde, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento. Una EColi_3 con forma de bacilo de 1.1 micras de radio y 5.5 micras de largo, de color rojo, se duplica cada 30 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento. Una EColi_4 con forma de bacilo de 1.5 micras de radio y 7.5 micras de largo, de color amarillo, se duplica cada 40 minutos y el hijo se separa del padre cuando alcanza el 80% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.2f,1.5f,0.2f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.7f,3.5f,0.7f),new Vector3(90,0,0),1,new Color(0.0f, 0.502f, 0.0f, 1f)); CPAM_Primitive(\"EColi_3\",PrimitiveType.Capsule,new Vector3(1.1f,5.5f,1.1f),new Vector3(90,0,0),1,new Color(1.0f, 0.0f, 0.0f, 1f)); CPAM_Primitive(\"EColi_4\",PrimitiveType.Capsule,new Vector3(1.5f,7.5f,1.5f),new Vector3(90,0,0),1,new Color(1.0f, 1.0f, 0.0f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.2f, Length=1.5f, TimeReference=600.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=600.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=600.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.7f, Length=3.5f, TimeReference=1200.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_3 -> Bacilo (Radius=1.1f, Length=5.5f, TimeReference=1800.0f, SeparationThreshold=0.65f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1800.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=1800.0f * 0.65f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_4 -> Bacilo (Radius=1.5f, Length=7.5f, TimeReference=2400.0f, SeparationThreshold=0.80f, MaxScale=1f, GrowthTime=0f, GrowthDuration=2400.0f * 0.80f, TimeSinceLastDivision=0f, DivisionInterval=2400.0f * 0.80f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.65 micras de radio y 2.7 micras de largo, de color azul, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento. Una EColi_2 con forma de bacilo de 0.75 micras de radio y 2.9 micras de largo, de color verde, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 75% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.65f,2.7f,0.65f),new Vector3(90,0,0),1,new Color(0.0f, 0.0f, 1.0f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.75f,2.9f,0.75f),new Vector3(90,0,0),1,new Color(0.0f, 0.502f, 0.0f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.65f, Length=2.7f, TimeReference=1200.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.75f, Length=2.9f, TimeReference=1200.0f, SeparationThreshold=0.75f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.75f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.75f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.55 micras de radio y 2.2 micras de largo, de color rojo, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 60% del crecimiento. Una EColi_2 con forma de bacilo de 0.6 micras de radio y 2.4 micras de largo, de color amarillo, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 65% del crecimiento. Una EColi_3 con forma de bacilo de 0.7 micras de radio y 2.8 micras de largo, de color cian, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 70% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.55f,2.2f,0.55f),new Vector3(90,0,0),1,new Color(1.0f, 0.0f, 0.0f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.6f,2.4f,0.6f),new Vector3(90,0,0),1,new Color(1.0f, 1.0f, 0.0f, 1f)); CPAM_Primitive(\"EColi_3\",PrimitiveType.Capsule,new Vector3(0.7f,2.8f,0.7f),new Vector3(90,0,0),1,new Color(0.0f, 1.0f, 1.0f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.55f, Length=2.2f, TimeReference=1200.0f, SeparationThreshold=0.60f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.60f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.60f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.6f, Length=2.4f, TimeReference=1200.0f, SeparationThreshold=0.65f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.65f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.65f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_3 -> Bacilo (Radius=0.7f, Length=2.8f, TimeReference=1200.0f, SeparationThreshold=0.70f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.70f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.70f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una EColi_1 con forma de bacilo de 0.45 micras de radio y 1.8 micras de largo, de color naranja, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 50% del crecimiento. Una EColi_2 con forma de bacilo de 0.5 micras de radio y 2 micras de largo, de color morado, se duplica cada 20 minutos y el hijo se separa del padre cuando alcanza el 50% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"EColi_1\",PrimitiveType.Capsule,new Vector3(0.45f,1.8f,0.45f),new Vector3(90,0,0),1,new Color(1.0f, 0.647f, 0.0f, 1f)); CPAM_Primitive(\"EColi_2\",PrimitiveType.Capsule,new Vector3(0.5f,2f,0.5f),new Vector3(90,0,0),1,new Color(0.502f, 0.0f, 0.502f, 1f));}2.OrganismTypes{[EColi_1 -> Bacilo (Radius=0.45f, Length=1.8f, TimeReference=1200.0f, SeparationThreshold=0.50f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.50f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.50f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false);EColi_2 -> Bacilo (Radius=0.5f, Length=2f, TimeReference=1200.0f, SeparationThreshold=0.50f, MaxScale=1f, GrowthTime=0f, GrowthDuration=1200.0f * 0.50f, TimeSinceLastDivision=0f, DivisionInterval=1200.0f * 0.50f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Un Bacillicus_Maximus con forma de bacilo de 2 micras de radio y 10 micras de largo, de color dorado, se duplica cada 50 minutos y el hijo se separa del padre cuando alcanza el 88% del crecimiento."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Primitive(\"Bacillicus_Maximus\",PrimitiveType.Capsule,new Vector3(2f,10f,2f),new Vector3(90,0,0),1,new Color(0.831f, 0.686f, 0.216f, 1f));}2.OrganismTypes{[Bacillicus Maximus -> Bacilo (Radius=2f, Length=10f, TimeReference=3000.0f, SeparationThreshold=0.88f, MaxScale=1f, GrowthTime=0f, GrowthDuration=3000.0f * 0.88f, TimeSinceLastDivision=0f, DivisionInterval=3000.0f * 0.88f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, TimeReferenceInitialized=false)]}"}]}
{"messages": [{"role": "system", "content": "Eres un generador de código C# y datos para Unity altamente especializado. Tu única función es traducir descripciones de microorganismos en una cadena de texto de dos partes, sin saltos de línea y con un formato estricto. Formato de Entrada: Recibirás una o más frases que describen microorganismos. Cada frase incluye dimensiones y sigue uno de estos tres patrones: 1. Bacilo: 'Una [Nombre] con forma de [Morfología] de [radio] micras de radio y [largo] micras de largo, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 2. Cocco: 'Una [Nombre] con forma de [Morfología] de [diametro] micras de diámetro, de color [color], se duplica cada [X] minutos y el hijo se separa del padre cuando alcanza el [Y]% del crecimiento.'. 3. Helicoide: 'Una [Nombre] con forma de [Morfología] de [length] micras de longitud, de color [color], se duplica cada [Z] minutos.'. Reglas de Generación de Salida: Tu salida DEBE ser una única cadena de texto, sin interrupciones, con DOS secciones numeradas. El formato es inalterable: '1.PrefabMaterialCreator.cs{...código C#...}2.OrganismTypes{[...]}'. Instrucciones Detalladas por Sección: Sección 1: 'PrefabMaterialCreator.cs': - Propósito: Generar llamadas a funciones C# para crear las formas primitivas de los organismos. - Lógica: Por cada organismo en la entrada, genera una llamada a una función C#: - Bacilo: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Capsule,new Vector3([radio]f,[largo]f,[radio]f),new Vector3(90,0,0),1,new Color(r,g,b,1f));'. - Cocco: Usa 'CPAM_Primitive(\"[Nombre]\",PrimitiveType.Sphere,new Vector3([D]f,[D]f,[D]f),new Vector3(90,0,0),0,new Color(r,g,b,1f));' donde [D] es el diámetro proporcionado. - Helicoide: Usa 'CPAM_Helical(\"[Nombre]\",[length]f, new Vector3(90,0,0), new Color(r,g,b,1f));'. - Color: Interpreta la descripción textual del color y conviértela a sus valores flotantes RGBA correspondientes (entre 0.0f y 1.0f). El canal Alfa (a) siempre es '1f'. Sección 2: 'OrganismTypes': - Propósito: Crear un mapeo de metadatos que asocie cada organismo con su morfología y sus parámetros de comportamiento y geométricos. - Formato: '[[Nombre1] -> [Morfología1](param1=valor1, param2=valor2);[Nombre2] -> [Morfología2](...);...]'. - Instrucción Clave: A continuación se detallan las plantillas de parámetros EXACTAS para cada morfología. Debes poblar los parámetros geométricos con los valores del prompt de usuario. No debes desviarte, añadir, ni omitir ningún parámetro de estas plantillas. - Si la morfología es **Bacilo**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - Radius: '[valor de radio]f'   - Length: '[valor de largo]f'   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '1f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - HasGeneratedChild: 'false'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - SeparationSign: '0'   - TimeReferenceInitialized: 'false' - Si la morfología es **Cocco**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - TimeReference: '[X] * 60.0f'   - SeparationThreshold: '[Y] / 100.0f'   - MaxScale: '[valor de diametro]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * SeparationThreshold'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * SeparationThreshold'   - Parent: 'Entity.Null'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'   - GrowthDirection: 'float3.zero' - Si la morfología es **Helicoide**, la lista de parámetros DEBE ser EXACTAMENTE la siguiente:   - MaxAxialLength: '[valor de length]f'   - CurrentAxialLength: '[valor de length / 3]f'   - GrowthTime: '0f'   - GrowthDuration: 'TimeReference * 0.8f'   - TimeSinceLastDivision: '0f'   - DivisionInterval: 'TimeReference * 0.8f'   - TimeReference: '[Z] * 60.0f'   - IsInitialCell: 'true'   - TimeReferenceInitialized: 'false'"},{"role": "user", "content": "Una Spiro_1 con forma de helicoide de 10 micras de longitud, de color rojo y se duplica cada 35 minutos. Una Spiro_2 con forma de helicoide de 11 micras de longitud, de color naranja y se duplica cada 35 minutos. Una Spiro_3 con forma de helicoide de 12 micras de longitud, de color amarillo y se duplica cada 35 minutos. Una Spiro_4 con forma de helicoide de 13 micras de longitud, de color verde y se duplica cada 35 minutos."},{"role": "assistant", "content": "1.PrefabMaterialCreator.cs{CPAM_Helical(\"Spiro_1\",10f,new Vector3(90,0,0), new Color(1.0f, 0.0f, 0.0f, 1f)); CPAM_Helical(\"Spiro_2\",11f,new Vector3(90,0,0), new Color(1.0f, 0.647f, 0.0f, 1f)); CPAM_Helical(\"Spiro_3\",12f,new Vector3(90,0,0), new Color(1.0f, 1.0f, 0.0f, 1f)); CPAM_Helical(\"Spiro_4\",13f,new Vector3(90,0,0), new Color(0.0f, 0.502f, 0.0f, 1f));}2.OrganismTypes{[Spiro_1 -> Helicoide (MaxAxialLength=10f, CurrentAxialLength=3.33f, GrowthTime=0f, GrowthDuration=2100.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2100.0f * 0.8f, TimeReference=2100.0f, IsInitialCell=true, TimeReferenceInitialized=false);Spiro_2 -> Helicoide (MaxAxialLength=11f, CurrentAxialLength=3.67f, GrowthTime=0f, GrowthDuration=2100.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2100.0f * 0.8f, TimeReference=2100.0f, IsInitialCell=true, TimeReferenceInitialized=false);Spiro_3 -> Helicoide (MaxAxialLength=12f, CurrentAxialLength=4.0f, GrowthTime=0f, GrowthDuration=2100.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2100.0f * 0.8f, TimeReference=2100.0f, IsInitialCell=true, TimeReferenceInitialized=false);Spiro_4 -> Helicoide (MaxAxialLength=13f, CurrentAxialLength=4.33f, GrowthTime=0f, GrowthDuration=2100.0f * 0.8f, TimeSinceLastDivision=0f, DivisionInterval=2100.0f * 0.8f, TimeReference=2100.0f, IsInitialCell=true, TimeReferenceInitialized=false)]}"}]}